# Chunk 1
library(RMySQL)
library(DBI)
library(odbc)
library(kableExtra)
library(knitr)
library(xtable)
library(tidyverse)
# Chunk 2
movieRating_d_dict_desc <- data.frame (
"Attributes" = c("SurveyID", "MovieID","Rating","Details"),
"Description" = c("Unique ID of Survey taken",
"Unique ID of Movie (Foreign key to movieName Database)",
"Rating from 1-5","Definition of Rating as per survey descriptions")
)
movieName_d_dict_desc <- data.frame (
"Attributes" = c("MovieID","Name"),
"Description" = c("Unique ID of Movie (Primary key to movieName Database)",
"Movie Name")
)
# Chunk 3
kbl(movieRating_d_dict_desc,booktabs = T, caption = "movieRating Database") %>%
kable_styling()
kbl(movieName_d_dict_desc,booktabs = T, caption = "movieName Database") %>%
kable_styling()
# Chunk 4
DSN <- rstudioapi::askForPassword("DSN Name")
# Chunk 5
con <- dbConnect(odbc(),DSN)
# Chunk 6
paste0("Tables available on this db are ")
dbListTables(con)
# Chunk 7
movieRatingsQuery <- dbGetQuery(con,
"SELECT surveyID,name AS movie, rating, details
FROM movieRatings
JOIN movieName ON movieRatings.movieID = movieName.movieID;")
# Chunk 8
missing_data1<-dbGetQuery(con,
"SELECT surveyID,name AS movie, rating, details
FROM movieRatings
JOIN movieName ON movieRatings.movieID = movieName.movieID
WHERE rating IS NULL;")
# Chunk 9
rownames(missing_data1) <-NULL
nrow(missing_data1)
missing_data1<-missing_data1 %>%
kbl() %>%
kable_paper("hover", full_width = F)
# Chunk 10
dbGetQuery(con,
"SELECT surveyID,name AS movie, rating, details
FROM movieRatings
JOIN movieName ON movieRatings.movieID = movieName.movieID
WHERE rating IS NULL;")
# Chunk 11
missing_data2<-subset(movieRatingsQuery,is.na(movieRatingsQuery$rating))
rownames(missing_data2) <-NULL
nrow(missing_data2)
missing_data2<-missing_data2 %>%
kbl() %>%
kable_minimal("hover", full_width = F)%>%
footnote(general ="The count for observations on both methods is 10, indicating no data loss for either method")
# Chunk 12
subset(movieRatingsQuery,is.na(movieRatingsQuery$rating))
# Chunk 13
missing_data2
# Chunk 14
dbGetQuery(con,
"SELECT name AS movie, rating, details, count(rating)
FROM movieRatings
JOIN movieName ON movieRatings.movieID = movieName.movieID
where rating IS NOT NULL
group by movie, rating, details
ORDER by movie ASC, rating DESC;"
)
# Chunk 15
subset(movieRatingsQuery,!is.na(movieRatingsQuery$rating))
# Chunk 16
movieRatingGroupQ<-dbGetQuery(con,
"SELECT name AS movie, rating, details, count(rating)
FROM movieRatings
JOIN movieName ON movieRatings.movieID = movieName.movieID
where rating IS NOT NULL
group by movie, rating, details
ORDER by movie ASC, rating DESC;"
)
nrow(movieRatingGroupQ)
sum(movieRatingGroupQ$`count(rating)`)
# Chunk 17
movieRatingsSubset <- subset(movieRatingsQuery,!is.na(movieRatingsQuery$rating))
nrow(movieRatingsSubset)
rownames(movieRatingsSubset)<-NULL
# Chunk 18
movieRatingGroupQ %>%
kbl() %>%
row_spec(seq(1,nrow(movieRatingGroupQ),2), background="#d2f8d2 ") %>%
kable_styling(bootstrap_options =c("striped","condensed"),full_width=FALSE)%>%
footnote(symbol = "The Total sum of our count is 26, accounting for 26 total observations")
# Chunk 19
movieRatingsSubset %>%
kbl() %>%
kable_styling(bootstrap_options =c("bordered","responsive"),full_width=FALSE)
# Chunk 20
movie_avg<-movieRatingsSubset %>%
group_by(movie) %>%
summarise(MeanRating=(mean(rating)))
# Chunk 21
movieRatingsSubset %>%
group_by(movie) %>%
summarise(MeanRating=(mean(rating)))
ggplot(data=movie_avg, aes(x=movie_avg$movie, y=movie_avg$MeanRating)) +
geom_bar(aes(fill=movie_avg$movie),colour="black",stat="identity")+
guides(fill=FALSE)+
xlab("MOVIE RATING") + ylab("MOVIE TITLE")+
ggtitle("AVERAGE RATING OF MOVIES")+
+coord_flip()
ggplot(data=movie_avg, aes(x=movie_avg$movie, y=movie_avg$MeanRating)) +
geom_bar(aes(fill=movie_avg$movie),colour="black",stat="identity")+
guides(fill=FALSE)+
xlab("MOVIE RATING") + ylab("MOVIE TITLE")+
ggtitle("AVERAGE RATING OF MOVIES")+
coord_flip()
