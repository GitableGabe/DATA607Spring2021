knitr::opts_chunk$set(eval = TRUE, results = FALSE)
library(tidyverse)
library(openintro)
library(viridis)
library(marmap)
library(knitr)
use_python(C:\Users\gcamp\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.8)
knitr::opts_chunk$set(eval = TRUE, results = FALSE)
library(tidyverse)
library(openintro)
library(viridis)
library(marmap)
library(knitr)
use_python("\Users\gcamp\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.8")
knitr::opts_chunk$set(eval = TRUE, results = FALSE)
library(tidyverse)
library(openintro)
library(viridis)
library(marmap)
library(knitr)
use_python("/Users/gcamp/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Python 3.8")
knitr::opts_chunk$set(eval = TRUE, results = FALSE)
library(tidyverse)
library(openintro)
library(viridis)
library(marmap)
library(knitr)
library(reticulate)
use_python("/Users/gcamp/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Python 3.8")
install.packages("reticulate")
knitr::opts_chunk$set(eval = TRUE, results = FALSE)
library(tidyverse)
library(openintro)
library(viridis)
library(marmap)
library(knitr)
library(reticulate)
use_python("/Users/gcamp/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Python 3.8")
install.packages(mini_conda)
install miniconda_update()
install miniconda()
install_miniconda()
install.packages("mapproj")
knitr::opts_chunk$set(eval = TRUE, results = FALSE)
numvec - c(2,5,8,9,0,6,7,8,4,5,7,11)
numvec = c(2,5,8,9,0,6,7,8,4,5,7,11)
numvec = c(2,5,8,9,0,6,7,8,4,5,7,11)
charvec - c("David","James","Sara","Tim","Pierre",
"Janice","Sara","Priya","Keith","Mark",
"Apple","Sara")
numvec = c(2,5,8,9,0,6,7,8,4,5,7,11)
charvec - c("David","James","Sara","Tim","Pierre",
"Janice","Sara","Priya","Keith","Mark",
"Apple","Sara")
numvec  = c(2,5,8,9,0,6,7,8,4,5,7,11)
charvec = c("David","James","Sara","Tim","Pierre","Janice","Sara","Priya","Keith","Mark","Apple","Sara")
gender  = c ("M","M","F","M","M","M","F","F","F","M","M","F")
state   = c("CO","KS","CA","IA","MO","FL","CA","CO","FL","CA","WY","AZ")
subset(numvec,numvec > 7)
subset(numvec,numvec > 7)
subset(numvec, numvec < 9 & numvec > 4)
subset(numvec, numvec < 3 |numvec > 9)
df = data.frame(var1 = c(numvec), var2 = c(charvec), gender = c(gender), state = c(state))
View(df)
df = data.frame(var1 = c(numvec), var2 = c(charvec), gender = c(gender), state = c(state))
subset(df, var1 < 5)
subset(df, var2 == "Sara")
subset(df, var1==5, select=c(var2, state))
subset(df, var2 != "Sara" & gender == "F" & var1 > 5)
getwd()
bridges       <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1")
bridges2      <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version2")
bridges_names <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.names")
View(bridges_names)
View(bridges)
View(bridges2)
bridges       <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1", header = FALSE)
bridges2      <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version2", header = FALSE)
bridges_names <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.names", header = FALSE)
View(bridges)
colname <- c("IDENTIF", "RIVER", "LOCATION","ERECTED","PURPOSE","LENGTH","LANES","CLEAR-G","T-OR-D","MATERIAL","SPAN","REL-L","TYPE")
colnames(bridges) <- colname
colnames(bridges2) <-colname
View(bridges_names)
View(bridges2)
View(bridges)
subset(bridges, bridges$TYPE == "WOOD" & bridges$LENGTH > 1000 & bridges$LANES > 1)
View(bridges)
